## scroll buffer
set -g history-limit 30000

## enable true color
#set -g default-terminal 'screen-256color'
set -g default-terminal "${TERM}"
set -ga terminal-overrides ",xterm-256color:RGB"
set -ga terminal-overrides ",alacritty:RGB"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0


## allow neovim to catch focus events
set -g focus-events on

## not to delay on ESC
set -s escape-time 0

## interval of updating status line
set -g status-interval 2

## 1-indexed
set -g base-index 1
setw -g pane-base-index 1

## prefix is Ctrl + backslash
set -g prefix 'C-\'

## reload this file
bind R source ~/.tmux.conf \; display 'Reloaded ~/.tmux.conf'

## split in current directory
bind '_' split-window -v -c "#{pane_current_path}" # split into top and bottom
bind '|' split-window -h -c "#{pane_current_path}" # split into left and right

## new window in current directory
bind c new-window -c "#{pane_current_path}"

## switch pane without prefix (Shift + Arrow)
bind -n S-left select-pane -L
bind -n S-down select-pane -D
bind -n S-up select-pane -U
bind -n S-right select-pane -R

## switch window sequentially (Alt + Arrow)
bind -n M-left previous-window
bind -n M-right next-window

## move window
bind -n M-S-left swap-window -t -1
bind -n M-S-right swap-window -t +1

## 並列実行のトグル化
bind e setw synchronize-panes \; display "synchronize-panes #{?pane_synchronized,on,off}"

## status line
set -g status-justify "centre"
set -g status-bg "colour236"
set -g status-fg "colour252"
set -g status-left-length 40
set -g status-left "#[fg=colour252,bg=colour239]Session: #S #[fg=colour239,bg=colour236]#[default]"
setw -g window-status-format " #I: #W "
setw -g window-status-current-format "#[fg=colour252,bg=colour32,bold] #I: #W #[default]"
set -g status-right-length 60
set -g status-right "#[fg=colour239,bg=colour236]#[fg=colour252,bg=colour239] #h  %m/%d %H:%M:%S#[default]"

## mouse enable/disable
bind m set -g mouse on \; display 'Mouse: ON'
bind M set -g mouse off \; display 'Mouse: OFF'

## mouse
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

## vi-like keybind
setw -g mode-keys vi
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip"
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip"
